When would you want to use a remote repository rather than keeping all your work local?
- Pros: remote copy serves as backup; allows you to co-operate with others; allows you to work on different computers; allows you to share your work
- Cons: requires an extra step to keep everything in sync

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
- Because remote changes could have been made by other contributers. You want to be in control of when and how to incorporate those into your local work.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
-	A fork is a clone of a whole repository within GitHub. GH keeps track of from which repository it was forked. A clone is a local copy of another (remote or local) repository. Git keeps track of from which repository it was cloned. A branch is a new development path within a repository, parallel to the master branch, with its own label that makes it reachable again after switching to another branch.

What is the benefit of having a copy of the last known state of the remote stored locally?
-	If local and remote are out of sync you can compare the differences and/or merge while off-line.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
-	A shared directory, but then you would have to do version tracking manually, plus there would be no/limited support for comparing changes and merging. Also collaboration features would have to be set up in an alternate way, like a discussion forum or some such thing. In other words, a headache.